{
    "$schema":"https://docs.oasis-open.org/sarif/sarif/v2.1.0/cos02/schemas/sarif-schema-2.1.0.json",
    "version":"2.1.0",
    "runs":[
       {
          "originalUriBaseIds": {
            "PROJECTROOT": {
              "uri": "file:///codacy/",
              "description": {
                "text": "The root directory for all project files."
              }
            }
          },
          "tool":{
             "driver":{
                "name":"Eslint (reported by Codacy)",
                "version":"7.29.0",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   
                ]
             }
          },
          "results":[
             
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             
          ]
       },
       {
          "tool":{
             "driver":{
                "name":"Bandit (reported by Codacy)",
                "version":"1.7.0",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   
                ]
             }
          },
          "results":[
             
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             
          ]
       },
       {
          "tool":{
             "driver":{
                "name":"Checkov (reported by Codacy)",
                "version":"1.0.838",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   
                ]
             }
          },
          "results":[
             
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             
          ]
       },
       {
          "tool":{
             "driver":{
                "name":"Remark-lint (reported by Codacy)",
                "version":"7.0.1",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   {
                      "id":"remark-lint-final-newline",
                      "name":"Warn when a line feed at the end of a file is missing.",
                      "shortDescription":{
                         "text":"Warn when a line feed at the end of a file is missing."
                      },
                      "help":{
                         "text":"Warn when a line feed at the end of a file is missing.",
                         "markdown":"Warn when a line feed at the end of a file is missing.\nEmpty files are allowed.\n\nSee [StackExchange](https://unix.stackexchange.com/questions/18743) for why.\n\n## Fix\n\n[`remark-stringify`](https://github.com/remarkjs/remark/tree/HEAD/packages/remark-stringify)\nalways adds a final line feed to files.\n\nSee [Using remark to fix your Markdown](https://github.com/remarkjs/remark-lint#using-remark-to-fix-your-markdown)\non how to automatically fix warnings for this rule.\n\n## Example\n\n##### `ok.md`\n\n###### In\n\nNote: `␊` represents LF.\n\n```markdown\nAlpha␊\n```\n\n###### Out\n\nNo messages.\n\n##### `not-ok.md`\n\n###### In\n\nNote: The below file does not have a final newline.\n\n```markdown\nBravo\n```\n\n###### Out\n\n```text\n1:1: Missing newline character at end of file\n```"
                      },
                      "properties":{
                         "category":"CodeStyle"
                      }
                   }
                ]
             }
          },
          "results":[
             {
                "ruleIndex":0,
                "ruleId":"remark-lint-final-newline",
                "message":{
                   "text":"[final-newline] Missing newline character at end of file"
                },
                "level":"note",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/README.md"
                         },
                         "region":{
                            "startLine":1,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"590096ef3b0e575610e35d96b998b30e"
                }
             }
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             {
                "location":{
                   "uri":"file:///codacy/README.md"
                }
             }
          ]
       },
       {
          "tool":{
             "driver":{
                "name":"Pylint (reported by Codacy)",
                "version":"1.9.5",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   
                ]
             }
          },
          "results":[
             {
                "ruleIndex":-1,
                "ruleId":"PyLint_W0311",
                "message":{
                   "text":"Bad indentation. Found 2 spaces, expected 4"
                },
                "level":"note",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.py"
                         },
                         "region":{
                            "startLine":2,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"ea5fbdd9fae971aaf0f19e05cb00a656"
                }
             },
             {
                "ruleIndex":-1,
                "ruleId":"PyLint_C0111",
                "message":{
                   "text":"Missing module docstring"
                },
                "level":"none",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.py"
                         },
                         "region":{
                            "startLine":1,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"e5d56ea4720298b7281c7b15b3da781c"
                }
             }
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             {
                "location":{
                   "uri":"file:///codacy/test.py"
                }
             }
          ]
       },
       {
          "tool":{
             "driver":{
                "name":"Prospector (reported by Codacy)",
                "version":"1.3.1",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   
                ]
             }
          },
          "results":[
             {
                "ruleIndex":-1,
                "ruleId":"Prospector_pylint",
                "message":{
                   "text":"Bad indentation. Found 2 spaces, expected 4 (bad-indentation)"
                },
                "level":"none",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.py"
                         },
                         "region":{
                            "startLine":2,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"bed07b36c7bb9e836003609529e65f23"
                }
             }
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             {
                "location":{
                   "uri":"file:///codacy/test.py"
                }
             }
          ]
       },
       {
          "tool":{
             "driver":{
                "name":"Jshint (reported by Codacy)",
                "version":"2.12.0",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   {
                      "id":"sub",
                      "name":"Prohibit [] notation",
                      "shortDescription":{
                         "text":"Prohibit [] notation when it can be expressed in dot notation"
                      },
                      "help":{
                         "text":"Prohibit [] notation when it can be expressed in dot notation",
                         "markdown":"# sub\n\nThis option suppresses warnings about using `[]` notation when it can be\nexpressed in dot notation: `person['name']` vs. `person.name`.\n@deprecated JSHint is limiting its scope to issues of code correctness.\n            If you would like to enforce rules relating to code style,\n            check out [the JSCS\n            project](https://github.com/jscs-dev/node-jscs)."
                      },
                      "properties":{
                         "category":"CodeStyle"
                      }
                   },
                   {
                      "id":"debug",
                      "name":"Prohibit debugger statements",
                      "shortDescription":{
                         "text":"Prohibits debugger statements"
                      },
                      "help":{
                         "text":"Prohibits debugger statements",
                         "markdown":"# debug\n\nThis option defines globals that are usually used for logging poor-man's\ndebugging: `console`, `alert`, etc. It is usually a good idea to not\nship them in production because, for example, `console.log` breaks in\nlegacy versions of Internet Explorer."
                      },
                      "properties":{
                         "category":"CodeStyle"
                      }
                   },
                   {
                      "id":"asi",
                      "name":"Enforce semicolon use",
                      "shortDescription":{
                         "text":"Requires each line to end in a semicolon"
                      },
                      "help":{
                         "text":"Requires each line to end in a semicolon",
                         "markdown":"# asi\n\nThis option suppresses warnings about missing semicolons. There is a lot\nof FUD about semicolon spread by quite a few people in the community.\nThe common myths are that semicolons are required all the time (they are\nnot) and that they are unreliable. JavaScript has rules about semicolons\nwhich are followed by *all* browsers so it is up to you to decide\nwhether you should or should not use semicolons in your code.\nFor more information about semicolons in JavaScript read [An Open Letter\nto JavaScript Leaders Regarding\nSemicolons](http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding)\nby Isaac Schlueter and [JavaScript Semicolon\nInsertion](http://inimino.org/~inimino/blog/javascript_semicolons)."
                      },
                      "properties":{
                         "category":"CodeStyle"
                      }
                   }
                ]
             }
          },
          "results":[
             {
                "ruleIndex":1,
                "ruleId":"debug",
                "message":{
                   "text":"Forgotten 'debugger' statement?"
                },
                "level":"note",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.js"
                         },
                         "region":{
                            "startLine":5,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"3921cbbe26dede56adc0b26a906a671c"
                }
             },
             {
                "ruleIndex":0,
                "ruleId":"sub",
                "message":{
                   "text":"['a'] is better written in dot notation."
                },
                "level":"none",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.js"
                         },
                         "region":{
                            "startLine":11,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"ebccc2c0721a5cd7fc71a45580d5fdda"
                }
             },
             {
                "ruleIndex":2,
                "ruleId":"asi",
                "message":{
                   "text":"Missing semicolon."
                },
                "level":"none",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.js"
                         },
                         "region":{
                            "startLine":15,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"6066601575e970b96601b933e846f927"
                }
             },
             {
                "ruleIndex":1,
                "ruleId":"debug",
                "message":{
                   "text":"Forgotten 'debugger' statement?"
                },
                "level":"note",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"file:///codacy/test.js"
                         },
                         "region":{
                            "startLine":17,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"3921cbbe26dede56adc0b26a906a671c"
                }
             }
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             {
                "location":{
                   "uri":"file:///codacy/test.js"
                }
             }
          ]
       },
       {
          "originalUriBaseIds": {
            "PROJECTROOT": {
              "uri": "file:///codacy/",
              "description": {
                "text": "The root directory for all project files."
              }
            }
          },
          "tool":{
             "driver":{
                "name":"Pylintpython3 (reported by Codacy)",
                "version":"2.7.4",
                "informationUri":"https://www.codacy.com",
                "rules":[
                   
                ]
             }
          },
          "results":[
             {
                "ruleIndex":-1,
                "ruleId":"PyLintPython3_W0311",
                "message":{
                   "text":"Bad indentation. Found 2 spaces, expected 4"
                },
                "level":"note",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "uri":"test.py",
                            "uriBaseId": "PROJECTROOT"
                         },
                         "region":{
                            "startLine":2,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"f2d203bcd4eebf672be9cf67d89107ad"
                }
             },
             {
                "ruleIndex":-1,
                "ruleId":"PyLintPython3_C0114",
                "message":{
                   "text":"Missing module docstring"
                },
                "level":"none",
                "locations":[
                   {
                      "physicalLocation":{
                         "artifactLocation":{
                            "index":0,
                            "uri":"test.py",
                            "uriBaseId": "PROJECTROOT"
                         },
                         "region":{
                            "startLine":1,
                            "startColumn":1
                         }
                      }
                   }
                ],
                "partialFingerprints":{
                   "primaryLocationStartColumnFingerprint":"1",
                   "primaryLocationLineHash":"ba8d38dd3d6233ab87850651954bd3dc"
                }
             }
          ],
          "invocations":[
             {
                "executionSuccessful":true,
                "workingDirectory":{
                   "uri":"file:///codacy"
                }
             }
          ],
          "artifacts":[
             {
                "location":{
                   "uri":"file:///codacy/test.py"
                }
             }
          ]
       }
    ]
 }